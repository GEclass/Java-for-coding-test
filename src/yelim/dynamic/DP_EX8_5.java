package yelim.dynamic;

import java.util.*;

public class DP_EX8_5 {
    // 정수 x를 1로 만들기 위한 연산 최소 횟수를 저장한 DP 테이블 - 메모이제이션
    public static int[] d = new int[30001];
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // 정수 x
        int x = sc.nextInt();

        // 정수 x를 1로 만드는 최소 횟수 구하기
        // 다이나믹 프로그래밍 - 보텀업 : 큰 문제를 작은 문제로 나누어 해결한다.
        // ai = min(ai-1, ai/2, ai/3, ai/5) + 1

        // 정수 6에 대하여 1로 만드는 최소 횟수를 구한다면
        // (정수 6에 1을 뺀 5를 1로 만드는 횟수, 정수 6을 2로 나눈 3을 1로 만드는 횟수, 정수 6을 3으로 나눈 2를 1로 나누는 횟수 중 가장 적은 횟수) + 1
        // a6 = min(a5, a3, a2) + 1 (a6/5은 정수 6은 5로 나누어 떨어지지 않으므로 제외한다.)
        // > a5 = min(a4, a1) + 1 ((정수 5에 1을 뺀 4를 1로 만드는 횟수, 정수 5를 5로 나눈 1을 1로 만드는 횟수 중 가장 적은 횟수) + 1)
        // > a3 = min(a2, a1) + 1 ((정수 3에 1을 뺀 2를 1로 만드는 횟수, 정수 3을 3으로 나눈 1을 1로 만드는 횟수 중 가장 적은 횟수) + 1)
        // > a2 = min(a1, a1) + 1 ((정수 2에 1을 뺀 2를 1로 만드는 횟수, 정수 2를 2로 나눈 1을 1로 만드는 횟수 중 가장 적은 횟수) + 1)

        for (int i = 2; i <= x; i++) { // 정수 2부터 정수 6까지 1로 만드는 횟수 구하기 위한 반복문
            // 정수 6에 1을 뺀 정수 5를 1로 만드는 횟수 구하기
            d[i] = d[i - 1] + 1;

            // 정수 6이 2로 나누어 떨어지는 경우,
            // min(정수 6에 1을 뺀 정수 5를 1로 만드는 횟수, 정수 6을 2로 나눈 정수 3를 1로 만드는 횟수)
            if (i % 2 == 0)
                d[i] = Math.min(d[i], d[i / 2] + 1);

            // 정수 6이 3으로 나누어 떨어지는 경우,
            // min(정수 6에 1을 뺀 정수 5를 1로 만드는 횟수, 정수 6을 3으로 나눈 정수 2를 1로 만드는 횟수)
            if (i % 3 == 0)
                d[i] = Math.min(d[i], d[i / 3] + 1);

            // 정수 6이 5로 나누어 떨어지는 경우, X
            if (i % 5 == 0)
                d[i] = Math.min(d[i], d[i / 5] + 1);
        }

        System.out.println(d[x]);
    }
}
